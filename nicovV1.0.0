#!/bin/bash

#default variables#
version="1.0"
red="\033[1;31m"
green="\033[1;32m"
yellow="\033[1;33m"
blue="\033[1;34m"
magenta="\033[1;35m"
cyan="\033[1;36m"
white="\033[1;37m"
clean=0
nicov_history=0
###################

help_text () {

	while read -r line; do
		printf "$red%s\n" "$line"
	done <<-EOF
	
	USAGE:
	
	NAZWA = "${0##*/}" or "./${0##*/}" or "$0"
	
	NAZWA -h | -V
	NAZWA [-c] [-q FORMAT]
	
	Step 1:
	write for instance "${0##*/}"
	click enter
	
	Step 2:
	write "w" or "f" or "d" or "h" or "q"
	click enter
	
	Step 3:
	write "0" or "1"
	click enter
	
	Step 4:
	write "\$sm" or "\$link"
	click enter

	OPTIONS:
	-h print this usage and exit
	-V print version information and exit
	-q set quality video (ID)
	-c unable screen cleaning (without it screen is being cleaned by default)
	
	EOF
	}

info () {
	printf "$magenta%s \033[0m\n" "$1"
}

die () {
help_text
exit 1
}

#Options handling#

while getopts 'cq:hV' OPT; do
	case $OPT in
		h) die
		;;
		V) info "Version: $version"
		exit 1
		;;
		q) if [ $OPTARG ]; then
		quality=$OPTARG
		else
		die
		fi
		;;
		c) clean=1
		;;
		*) die
		;;
	esac
done

#################

address_type () {
case $x in
	0) question="${yellow}Sm?"
	URL="https://www.nicovideo.jp/watch/sm$1"
	;;
	1) question="${cyan}Link?"
	URL=$1
	;;
	*) die
	;;
	esac
}

watch () {
if [ $quality ];then
yt-dlp -f $quality -o - "$URL" | mpv - && echo ${URL##*/sm} >> $HOME/.nicov_history ; sort $HOME/.nicov_history | uniq > $HOME/.nicov_history_cache && cat $HOME/.nicov_history_cache > $HOME/.nicov_history && rm $HOME/.nicov_history_cache
else
yt-dlp -o - "$URL" | mpv - && echo ${URL##*/sm} >> $HOME/.nicov_history ; sort $HOME/.nicov_history | uniq > $HOME/.nicov_history_cache && cat $HOME/.nicov_history_cache > $HOME/.nicov_history && rm $HOME/.nicov_history_cache
fi
}
format () {
[ $nicov_history == 1 ] && cleaning
yt-dlp -F $URL
printf "${magenta}Do you want to download?\n${yellow}Yes[y]?\n${cyan}No[n]?\n${magenta}"
read -p "> " a
if [ $a == "y" ]; then
printf "Do you want to change format?\n${yellow}Yes[y]?\n${cyan}No[n]?\n${magenta}"
read -p "> " b
[ $b == "y" ] && printf "What format you want?\n" && read -p "> " quality
download
else
exit
fi
}
download () {
if [ $quality ];then
yt-dlp -f $quality $URL
else
yt-dlp $URL
fi
}
hist () {
cleaning
divider
while read -r hist; do
	printf "$white%s\n" "$hist"
done < $HOME/.nicov_history
}

operation () {
case $y in
	w) $1
	;;
	f) $2
	;;
	d) $3
	;;
	h) $4
	divider
	prompt
	nicov_history=1
	operation correct correct correct hist
	;;
	q) exit
	;;
	*) die
	;;
	esac
}

correct () {
[ $nicov_history != 1 ] && cleaning
printf "Got it!\n"
printf "${yellow}Sm[0]?\n${cyan}Link[1]?\n${magenta}"
read -p "> " x
address_type
}

prompt () {
printf "${green}Watch[w]?\n${blue}Format[f]?\n${yellow}Download[d]?\n${cyan}History[h]?\n${red}Quit[q]?\n${magenta}"
read -p "> " y
}

cleaning () {
[ $clean == 0 ] && printf "\033[2J\033[0;0H"
}

divider () {
printf "${red}************\n"
}

#START!#

cleaning

#asking operation to perform
[ $clean != 0 ] && divider
prompt
#checking y
operation correct correct correct hist

#asking info for URL
printf "$question\n${magenta}> "
read z
#[ $z == "q" ] && exit
#creating URL
address_type $z
#final operation
operation watch format download hist
printf "\nThanks for your cooperation\n"
